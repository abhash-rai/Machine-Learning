import datetime

def datetime_converter(date_string: str):
    '''
    Example input = "2020-01-01 12:00:00"
    '''
    normal_date_time = datetime.datetime.strptime(date_string, '%Y-%m-%d %H:%M:%S') # Parse the string to a datetime object
    unix_timestamp = int(normal_date_time.timestamp()) # Convert to Unix timestamp
    return unix_timestamp

input_info = {
 'bathrooms': [1, 2, 3, 4, 5],
 'bedrooms': [1, 3, 2, 4, 0, 5, 6],
 'fee': [0, 1],
 'has_photo': ['Thumbnail', 'No', 'Yes'],
 'square_feet': range(101, 40000),
 'cityname': ['Other',
  'Newport News',
  'Raleigh',
  'Hampton',
  'Lakewood',
  'Charleston',
  'Alpharetta',
  'Washington',
  'Scottsdale',
  'Kirkland',
  'San Antonio',
  'Portland',
  'Austin',
  'Kansas City',
  'Pittsburgh',
  'San Jose',
  'Madison',
  'Concord',
  'Arlington',
  'Alexandria',
  'Dallas',
  'Chicago',
  'Orlando',
  'Lafayette',
  'Sacramento',
  'Jacksonville',
  'Boulder',
  'Owings Mills',
  'Saint Petersburg',
  'Houston',
  'Saint Louis',
  'Kent',
  'Oklahoma City',
  'Nashville',
  'Omaha',
  'Grand Forks',
  'Philadelphia',
  'Cincinnati',
  'Edmond',
  'College Station',
  'Tucson',
  'Bellevue',
  'Atlanta',
  'Tampa',
  'Federal Way',
  'Baltimore',
  'Lithonia',
  'Birmingham',
  'Long Beach',
  'San Francisco',
  'Columbia',
  'Davenport',
  'Glendale',
  'Peoria',
  'Columbus',
  'Morrisville',
  'Charlotte',
  'Indianapolis',
  'Los Angeles',
  'Salt Lake City',
  'Denver',
  'Aurora',
  'Baton Rouge',
  'Greenville',
  'Colorado Springs',
  'Lawrenceville',
  'Phoenix',
  'Minot',
  'Glen Burnie',
  'Springfield',
  'Grand Prairie',
  'Overland Park',
  'Richmond',
  'Minneapolis',
  'Mckinney',
  'Dayton',
  'Mansfield',
  'Laurel',
  'Gaithersburg',
  'Lexington',
  'Culver City',
  'Wilmington',
  'Lowell',
  'Irving',
  'Chattanooga',
  'Tempe',
  'Sarasota',
  'Miami',
  'Saint Paul',
  'Reno',
  'Lincoln',
  'Las Vegas',
  'Memphis',
  'Plano',
  'Bothell',
  'Boston',
  'Little Rock',
  'Lynchburg',
  'Fayetteville',
  'Fargo',
  'Mesquite',
  'Spring',
  'San Diego',
  'Fort Myers',
  'Fort Collins',
  'Everett',
  'Lynnwood',
  'Salem',
  'Naples',
  'Broomfield',
  'Durham',
  'Louisville',
  'Lenexa',
  'Manchester',
  'Toledo',
  'Englewood',
  'Euless',
  'Smyrna',
  'Riverside',
  'Fairfax',
  'Hyattsville',
  'Fort Lauderdale',
  'Cambridge',
  'Roanoke',
  'Richardson',
  'Henderson',
  'Greensboro',
  'Gilbert',
  'Midlothian',
  'Santa Monica',
  'Kissimmee',
  'Redmond',
  'Mesa',
  'Decatur',
  'Cumming',
  'Topeka',
  'Wichita',
  'Pasadena',
  'Roswell',
  'Moreno Valley',
  'Lawrence',
  'Garland',
  'New Orleans',
  'Longmont',
  'Knoxville',
  'Shreveport',
  'Loveland',
  'Renton',
  'Chandler',
  'Littleton',
  'Burlington',
  'New York',
  'Marietta',
  'Portsmouth',
  'Norfolk',
  'Yorktown',
  'Jersey City',
  'Silver Spring',
  'Irvine',
  'Chapel Hill',
  'Reston',
  'Brooklyn',
  'Cleveland',
  'Corpus Christi',
  'Woodbridge',
  'Suwanee',
  'Fredericksburg',
  'Clearwater',
  'Frisco',
  'Cherry Hill',
  'Issaquah',
  'Norman',
  'Canton',
  'Bradenton',
  'Cary',
  'Parker',
  'Apex',
  'Lewisville',
  'Rockville',
  'Germantown',
  'Longview',
  'West New York',
  'Petersburg',
  'North Las Vegas',
  'Bethesda',
  'Charlottesville',
  'Chevy Chase',
  'Chesapeake',
  'Tyler',
  'Carrollton',
  'Winston Salem',
  'East Orange',
  'Hanover',
  'Henrico',
  'Beachwood',
  'Randallstown',
  'Bedford',
  'Ellicott City',
  'Windermere',
  'Suitland',
  'Grapevine',
  'Knightdale',
  'Virginia Beach',
  'Odenton',
  'Maple Valley',
  'West Chester',
  'District Heights',
  'Akron',
  'Quincy',
  'Beltsville',
  'Waltham',
  'Falls Church',
  'Glen Allen',
  'Williamsburg'],
 'state': ['CA',
  'VA',
  'NC',
  'Other',
  'CO',
  'GA',
  'MA',
  'AZ',
  'IA',
  'WA',
  'TX',
  'IL',
  'MS',
  'OR',
  'FL',
  'MO',
  'PA',
  'WI',
  'OK',
  'UT',
  'RI',
  'NJ',
  'IN',
  'MD',
  'OH',
  'TN',
  'ND',
  'NE',
  'AR',
  'MI',
  'MN',
  'SC',
  'KS',
  'AL',
  'NY',
  'KY',
  'LA',
  'CT',
  'NV',
  'VT',
  'NH'],
 'latitude': range(-90, 90),
 'longitude': range(-180, 180),
 'time': datetime_converter,
 'amenities': ['AC',
  'Alarm',
  'Basketball',
  'Cable or Satellite',
  'Clubhouse',
  'Dishwasher',
  'Doorman',
  'Elevator',
  'Fireplace',
  'Garbage Disposal',
  'Gated',
  'Golf',
  'Gym',
  'Hot Tub',
  'Internet Access',
  'Luxury',
  'Parking',
  'Patio/Deck',
  'Playground',
  'Pool',
  'Refrigerator',
  'Storage',
  'TV',
  'Tennis',
  'View',
  'Washer Dryer',
  'Wood Floors',
  'missing'],
 'pets': ['Cats', 'Dogs', 'missing']
 }